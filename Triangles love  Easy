import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	static boolean checkRightAngled(long X1, long Y1,long X2, long Y2,long X3, long Y3){
     
    long A = (long)Math.pow((X2 - X1), 2) +
            (long)Math.pow((Y2 - Y1), 2);
 
    long B = (long)Math.pow((X3 - X2), 2) +
            (long)Math.pow((Y3 - Y2), 2);
 
    long C = (long)Math.pow((X3 - X1), 2) +
            (long)Math.pow((Y3 - Y1), 2);
 
    if ((A != 0 && B != 0 && C != 0) &&
        (A == (B + C) || B == (A + C) ||
         C == (A + B)))
		return true;
   
   return false;
        
}

static void combination(long x1, long y1, long x2, long y2, long x3, long y3){
    long x, y;
 
    if (checkRightAngled(x1, y1, x2, y2, x3, y3))
    {
        System.out.print("Right");
        return;
    }
    else
    {
		x = x1 + 1;
		y = y1 + 1;

		if (checkRightAngled(x, y1, x2, y2, x3, y3) || checkRightAngled(x1, y, x2, y2, x3, y3))
		{
			System.out.print("Special");
			return;
		}

		x =  x2 + 1;
		y =  y2 + 1;

		if (checkRightAngled(x1, y1, x, y2, x3, y3) || checkRightAngled(x1, y1, x2, y, x3, y3))
		{
			System.out.print("Special");
			return;
		}

		x =	1 + x3;
		y = 1 + y3;

		if (checkRightAngled(x1, y1, x2, y2, x, y3) || checkRightAngled(x1, y1, x2, y2, x3, y))
		{
			System.out.print("Special");
			return;
		}
		x = x1 - 1;
		y = y1 - 1;

		if (checkRightAngled(x, y1, x2, y2, x3, y3) || checkRightAngled(x1, y, x2, y2, x3, y3))
		{
			System.out.print("Special");
			return;
		}

		x =  x2 - 1;
		y =  y2 - 1;

		if (checkRightAngled(x1, y1, x, y2, x3, y3) || checkRightAngled(x1, y1, x2, y, x3, y3))
		{
			System.out.print("Special");
			return;
		}

		x =	x3 - 1;
		y = y3 - 1;

		if (checkRightAngled(x1, y1, x2, y2, x, y3) || checkRightAngled(x1, y1, x2, y2, x3, y))
		{
			System.out.print("Special");
			return;
		}
        System.out.println("Simple");
    }
 
}

	public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
		long a = sc.nextInt();
		long b = sc.nextInt();
		long a1 = sc.nextInt();
		long b1 = sc.nextInt();
		long a2 = sc.nextInt();
		long b2 = sc.nextInt();

		combination(a,b,a1,b1,a2,b2);
	}
}
